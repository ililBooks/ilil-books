name: deploy

on:
  push:
    branches:
      - feat/ci_cd

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      IMAGE_TAG: ${{ github.sha }}
      VERSION_LABEL: v-${{ github.run_number }}-${{ github.run_attempt }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker image
        id: build-image
        run: |
          IMAGE_URI="${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          echo $IMAGE_URI
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Replace image URI in Dockerrun.aws.json
        run: |
          echo "Before replacement:"
          cat Dockerrun.aws.json
          sed -i "s|__IMAGE_URI__|${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}|g" Dockerrun.aws.json
          echo "After replacement:"
          cat Dockerrun.aws.json

      - name: Ensure file exists before zipping
        run: ls -al Dockerrun.aws.json

      - name: Zip deployment package
        run: |
          zip deploy.zip Dockerrun.aws.json
          unzip -l deploy.zip

      - name: Upload to S3
        run: |
          aws s3 cp deploy.zip s3://${{ secrets.AWS_S3_BUCKET_NAME }}/deploy-${{ github.run_number }}.zip

      - name: Create new application version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.EB_APP_NAME }} \
            --version-label ${{ env.VERSION_LABEL }} \
            --source-bundle S3Bucket=${{ secrets.AWS_S3_BUCKET_NAME }},S3Key=deploy-${{ github.run_number }}.zip

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name ${{ secrets.EB_ENV_NAME }} \
            --version-label ${{ env.VERSION_LABEL }}

      - name: Notify via Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEB_MESSAGE: "Elastic Beanstalk에 프로젝트 배포를 완료하였습니다."
